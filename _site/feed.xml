<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.7.3">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2018-02-27T02:34:21-05:00</updated><id>/</id><title type="html">Ali Encoded</title><subtitle>Site built using using jekyll.  #You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.</subtitle><entry><title type="html">Jekyll tips</title><link href="/jekyll/update/2018/02/26/post3.html" rel="alternate" type="text/html" title="Jekyll tips" /><published>2018-02-26T12:30:00-05:00</published><updated>2018-02-26T12:30:00-05:00</updated><id>/jekyll/update/2018/02/26/post3</id><content type="html" xml:base="/jekyll/update/2018/02/26/post3.html">&lt;p&gt;Some tips- in no particular order &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tip #1&lt;br /&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;It's perfectly valid to mix .markdown files and .html files in your _posts folder.&lt;/p&gt;</content><author><name></name></author><summary type="html">Some tips- in no particular order Tip #1 It's perfectly valid to mix .markdown files and .html files in your _posts folder.</summary></entry><entry><title type="html">Gotchyas presented by jekyll</title><link href="/jekyll/update/2018/02/26/post2.html" rel="alternate" type="text/html" title="Gotchyas presented by jekyll" /><published>2018-02-26T11:30:00-05:00</published><updated>2018-02-26T11:30:00-05:00</updated><id>/jekyll/update/2018/02/26/post2</id><content type="html" xml:base="/jekyll/update/2018/02/26/post2.html">&lt;p&gt;&lt;strong&gt;Gotchya #1&lt;br /&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;Out of the box, the rendering engine (is it liquid?) will not render pages that are date stamped at a future time.&amp;nbsp; Spent 20 minutes trying to figure out why my page wasnt generating.&amp;nbsp; =(&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Gotchya #2&lt;br /&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The date prepended in the post file name (yyyy-mm-dd-you-post-name) does not matter at all.&amp;nbsp; In fact, the title also does not matter.&amp;nbsp; The values in the &quot;front matter&quot; portion of the posts is what is used to determine if a post will be generated for the site.&lt;/p&gt;</content><author><name></name></author><summary type="html">Gotchya #1 &amp;nbsp;Out of the box, the rendering engine (is it liquid?) will not render pages that are date stamped at a future time.&amp;nbsp; Spent 20 minutes trying to figure out why my page wasnt generating.&amp;nbsp; =( Gotchya #2 The date prepended in the post file name (yyyy-mm-dd-you-post-name) does not matter at all.&amp;nbsp; In fact, the title also does not matter.&amp;nbsp; The values in the &quot;front matter&quot; portion of the posts is what is used to determine if a post will be generated for the site.</summary></entry><entry><title type="html">How will I write content?</title><link href="/jekyll/update/2018/02/26/post1.html" rel="alternate" type="text/html" title="How will I write content?" /><published>2018-02-26T10:30:00-05:00</published><updated>2018-02-26T10:30:00-05:00</updated><id>/jekyll/update/2018/02/26/post1</id><content type="html" xml:base="/jekyll/update/2018/02/26/post1.html">&lt;div&gt;


&lt;p&gt;One of the challenges of getting started with jekyll is figuring out how to write content for your site.&amp;nbsp; After doing a very quick search of what's actually available and what other jekyllers are using, I have decided to move forward with using a visual editor like &lt;a href=&quot;wordtohtml.net&quot; target=&quot;_blank&quot;&gt;wordtohtml.net&lt;/a&gt;. Familiarity with HTML leaves me the option to use other tools or templates to write content more simply.&amp;nbsp; Also, if I find that I don't actually like using this pattern for writing content, the promise from jekyll is that it is easy to change.&amp;nbsp; I have my fingers crossed.&lt;/p&gt;


&lt;/div&gt;</content><author><name></name></author><summary type="html"></summary></entry><entry><title type="html">Welcome to Jekyll!</title><link href="/jekyll/update/2018/02/21/post0.html" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2018-02-21T14:57:05-05:00</published><updated>2018-02-21T14:57:05-05:00</updated><id>/jekyll/update/2018/02/21/post0</id><content type="html" xml:base="/jekyll/update/2018/02/21/post0.html">&lt;p&gt;You’ll find this post in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;https://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><summary type="html">You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.</summary></entry></feed>